- require 'cgi'
- require 'bigdecimal'

:css
  .count {
    text-align: right !important;
  }

%div#resource_table{:style => "margin-top: 1em;"}
  %h2{:style => "font-size: 150%; margin-bottom: 3px;"}
    Search Results
    %span#result_counts_container
      %span#result_counts
      (
      %a.h2_link{:href => "javascript:void(0);", :id => "show_hide_no_results"} <span class="show_hide_text">show</span><span class="show_hide_text not_visible">hide</span> resources with no matches
      )

  %table.zebra{:style => "width: 800px;"}
    %thead
      %tr
        %th Resource
        %th.count Matched Records
        %th.count % Matched
        %th.count Total Records
    %tbody
      -@counts.each do |acronym, count|
        -next unless count
        -resource_data = @resources_hash[acronym.to_s]
        -resource_name = resource_data[:name]
        -total_results = count
        -total_elements = resource_data[:count]
        -total_percent = (BigDecimal(total_results) / BigDecimal(total_elements)) * BigDecimal.new(100)
        -total_percent = total_percent < 0.01 ? '< 0.01%' : sprintf('%0.2f%', total_percent)
        -delim_results = number_with_delimiter(total_results, :delimiter => ",")
        -delim_elements = number_with_delimiter(total_elements, :delimiter => ",")
        %tr{:class => total_results == 0 && "zero_results not_visible"}
          %td
            %a.results_link{:href => "javascript:void(0);", :data => {:resource_id => acronym, :resource_name => resource_name}} #{resource_name}
          %td.count
            -if total_results > 0
              %a.results_link{:href => "javascript:void(0);", :data => {:resource_id => acronym, :resource_name => resource_name}} #{delim_results}
            -else
              #{delim_results}
          %td.count= total_percent
          %td.count= delim_elements

%h2.resource_title.not_visible
  %span#resource_title
  %span
    %a.h2_link{:href => "javascript:void(0);", :id => "show_all_resources"} show all resources

%div#resource_results
  -@counts.each do |acronym, count|
    - next unless count
    %div.resource_info.resource_details.not_visible{:id => "resource_info_#{acronym}"}
      %div.resource_image
        %img{:src => @resources_hash[acronym.to_s][:logo], :class => "resource_image"}
      - if count > 0
        / Enable when getting the first 10 docs for all resources at once
        /- @documents = @documents_by_resource[acronym.to_s]
        /- @resource_results = ResourceIndexResultPaginatable.new(@documents)
        /- @acronym = acronym.to_s

        %div.paginate_ajax
          / Enable when getting the first 10 docs for all resources at once
          /= render partial: "resource_results"
          = loading_spinner()
          %a{class: "resource_results_ajax", style: "display: none;", href: "/resource_index/results_paginate?acronym=#{acronym}&#{LinkedData::Client::ResourceIndex.class_params(@classes)}"}
      - else
        No results
      %div.clearing

%div.clearing

:javascript
  bpResourceIndexEmbedded = (jQuery("#resource_table").parents("div.resource_index_embed").length > 0);
  var resources = #{@resources_hash.to_json};
  updateCounts();
