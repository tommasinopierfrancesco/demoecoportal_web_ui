# coding: utf-8

# Organization info
$ORG = "NCBO"
$ORG_URL = "http://www.bioontology.org"

# Site name (required)
$SITE = "BioPortal"

# The URL for the BioPortal Rails UI (this application)
$UI_URL = "http://bioportal.bioontology.org"

# If you are running a PURL server to provide URLs for ontologies in your BioPortal instance, enable this option
$PURL_ENABLED = false

# The PURL URL is generated using this prefix + the abbreviation for an ontology.
# The PURL URL generation algorithm can be altered in app/models/ontology_wrapper.rb
$PURL_PREFIX = "http://purl.bioontology.org/ontology"

# If your BioPortal installation includes Annotator set this to false
$ANNOTATOR_DISABLED = true

# If your BioPortal installation includes Resource Index set this to false
$RESOURCE_INDEX_DISABLED = true

# Unique string representing the UI's id for use with the BioPortal Core
$API_KEY = ""

# REST core service address
$REST_URL = "http://example.org:8080/"

# Ontolobridge endpoint url
$ONTOLOBRIDGE_BASE_URL = "http://dev3.ccs.miami.edu:8080/ontolobridge/REST"

# Ontologies for which to enable the new term request (Ontolobridge) tab
$NEW_TERM_REQUEST_ONTOLOGIES = []

# Legacy REST core service address (BioPortal v3.x and lower)
$LEGACY_REST_URL = "http://example.org:8080/bioportal"

# Max number of children to return when rendering a tree view
$MAX_CHILDREN = 2500

# Max number of children that it's possible to display (more than this is either too slow or not helpful to users)
$MAX_POSSIBLE_DISPLAY = 10000

# Release version text (appears in footer of all pages, except 404 and 500 errors)
$RELEASE_VERSION = ""

# Pairing a name with an array of ontology virtual ids will allow you to filter ontologies based on a subdomain.
# If your main UI is hosted at example.org and you add custom.example.org pointing to the same Rails installation
# you could filter the ontologies visible at custom.example.org by adding this to the hash: "custom" => { :name => "Custom Slice", :ontologies => [1032, 1054, 1099] }
# Any number of slices can be added. Groups are added automatically using the group acronym as the subdomain.
$ENABLE_SLICES = false
$ONTOLOGY_SLICES = {}

# Enables a help page maintained elsewhere that is read and displayed. Content is stored in a div with id 'bodyContent'.
$WIKI_HELP_PAGE = ""

# Google Analytics ID (optional)
$ANALYTICS_ID = ""

# A user id for user 'anonymous' for use when a user is required for an action on the REST service but you don't want to require a user to login
$ANONYMOUS_USER = 0

# Cube metrics reporting
$ENABLE_CUBE = false
$CUBE_HOST = "localhost"
$CUBE_PORT = 1180

# Enable client request caching
$CLIENT_REQUEST_CACHING = true

# Enable debugging of API Ruby client
$DEBUG_RUBY_CLIENT = false
# When DEBUG_RUBY_CLIENT is true, this array can limit the cache keys for which to receive debug output. Empty array means output debugging info for ALL keys
$DEBUG_RUBY_CLIENT_KEYS = []

# If you don't use Airbrake you can have exceptions emailed to the $ERROR_EMAIL address by setting this to 'true'
$EMAIL_EXCEPTIONS = true

# Email settings
ActionMailer::Base.smtp_settings = {
  :address  => "", # smtp server address, ex: smtp.example.org
  :port  => 25, # smtp server port
  :domain  => "", # fqdn of rails server, ex: rails.example.org
}

# Announcements mailman mailing list REQUEST address, EX: list-request@lists.example.org
# NOTE: You must use the REQUEST address for the mailing list. ONLY WORKS WITH MAILMAN LISTS.
$ANNOUNCE_LIST = "bioportal-test-request@lists.stanford.edu"

# Email addresses used for sending notifications (errors, feedback, support)
$SUPPORT_EMAIL = "recipient@example.org"
$ADMIN_EMAIL = "recipient@example.org"
$ERROR_EMAIL = "recipient@example.org"

# Settings for date formatting
CalendarDateSelect.format = :american

# reCAPTCHA
# In order to use reCAPTCHA on the account creation and feedback submission pages:
#    1. Obtain a reCAPTCHA v2 key from: https://www.google.com/recaptcha/admin
#    2. Include the corresponding keys below (between the single quotes)
#    3. Set the USE_RECAPTCHA option to 'true'
ENV['USE_RECAPTCHA'] = 'false'
ENV['RECAPTCHA_PUBLIC_KEY']  = ''
ENV['RECAPTCHA_PRIVATE_KEY'] = ''

# Memcached servers
ENV['MEMCACHE_SERVERS'] = 'localhost'

# Custom BioPortal logging
require 'log'
$REMOTE_LOGGING = false

##
# Flex Options
##

# URL to pull Flex apps from
$FLEX_URL = "/flex"

# Flex App API keys
$ANNOTATOR_FLEX_APIKEY = ""
$SEARCH_FLEX_APIKEY = ""
$RECOMMENDER_FLEX_APIKEY = ""
$FLEXOVIZ_APIKEY = ""

# URL where BioMixer GWT app is located
$BIOMIXER_URL = 'http://biomixer.bioontology.org'

##
# Custom Ontology Details
# Custom details can be added on a per ontology basis using a key/value pair as columns of the details table
#
# Example:
# $ADDITIONAL_ONTOLOGY_DETAILS = { 1000 => { "Additional Detail" => "Text to be shown in the right-hand column." } }
##
$ADDITIONAL_ONTOLOGY_DETAILS = {}

#################################
## AUTO-GENERATED DO NOT MODIFY
#################################

# Full string for site, EX: "NCBO BioPortal"
$ORG_SITE = ($ORG.nil? || $ORG.empty?) ? $SITE : "#{$ORG} #{$SITE}"

# Email address to mail when exceptions are raised
ExceptionNotifier.exception_recipients = [$ERROR_EMAIL]

